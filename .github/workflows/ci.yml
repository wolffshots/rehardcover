name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Create schemas directory
        run: mkdir -p schemas

      - name: Install cynic
        run: cargo install --locked cynic-cli

      - name: Fetch Hardcover schema
        env:
          HARDCOVER_API_KEY: ${{ secrets.HARDCOVER_API_KEY }}
        run: |
          cynic introspect \
            --header "Authorization: Bearer $HARDCOVER_API_KEY" \
            https://api.hardcover.app/v1/graphql \
            -o schemas/hardcover.graphql

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --verbose

      - name: Build check
        run: cargo check --verbose

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Install cynic
        run: cargo install --locked cynic-cli

      - name: Create schemas directory
        run: mkdir -p schemas

      - name: Fetch Hardcover schema
        env:
          HARDCOVER_API_KEY: ${{ secrets.HARDCOVER_API_KEY }}
        run: |
          cynic introspect \
            --header "Authorization: Bearer $HARDCOVER_API_KEY" \
            https://api.hardcover.app/v1/graphql \
            -o schemas/hardcover.graphql

      - name: Build project
        run: cargo build --verbose --release
